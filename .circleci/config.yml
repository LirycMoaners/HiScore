version: 2

# List of jobs
jobs:
  # The build job
  build:
    working_directory: ~/project
    docker:
      - image: circleci/node:12.13-browsers
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout

      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}

      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install

      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      # Lint the source code
      - run:
          name: Linting
          command: npm run lint

      # Build project with different configuration based on
      # the current branch
      - run:
          name: Building
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                npm run build:prod
            else
                npm run build
            fi
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist
      - run:
          name: Capacitor sync
          command: npx cap sync
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-android-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - android

  deploy:
    working_directory: ~/project
    docker:
      - image: circleci/node:12.13-browsers
    steps:
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore cache from the build job which contains the
      # dist folder that needs to be deployed
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install LFTP
          command: |
            sudo apt-get update;
            sudo apt-get install lftp;
      - run:
          name: Send Via FTP
          command: lftp ftp://${username}:${password}@${hostname} -e "mirror -v -R ./dist/ /www/; quit"

  build_android:
    working_directory: ~/project/android
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
          key: v1-android-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      - run:
          name: Build Android
          command: ./gradlew tasks
      - run:
          name: Assemble debug apk
          command: ./gradlew :app:assembleDebug
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
      - build
      # The deploy job will only run on the filtered branches and
      # require the build job to be successful before it starts
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
      - build_android:
          requires:
            - build
